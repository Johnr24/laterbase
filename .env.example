# --- PostgreSQL Connection Details ---
# Hostname or IP of your primary Laterbase PostgreSQL server
PRIMARY_HOST=your_primary_server_hostname_or_ip

# Password for the 'postgres' user (or replication user) on the primary server
# Used for both replication (standby) and backups (backup-agent)
REPL_PASSWORD=your_primary_db_password

# Comma-separated list of database names on the primary Laterbase server to back up
# Required by the backup-agent for pg_dump (e.g., db1,db2,another_db)
PRIMARY_DBS=your_laterbase_db_names

# Optional: Port and User for primary connection if not default (5432, postgres)
# PRIMARY_PORT=5432
# PRIMARY_USER=postgres

# --- Standby Server Configuration (Optional Overrides) ---
# These override the defaults set in docker-compose.yml for the standby service
# POSTGRES_USER=postgres
# POSTGRES_DB=laterbase_standby_db
# PGDATA=/var/lib/postgresql/data/pgdata

# --- pgAdmin Configuration ---
# Email address for the default pgAdmin user login
PGADMIN_EMAIL=your_pgadmin_email@example.com
# Password for the default pgAdmin user login
PGADMIN_PASSWORD=your_pgadmin_password

# --- Backup Agent Configuration (Rclone & Retention) ---
# --- Backup Agent: Active Rclone Destination ---
# Name of the rclone remote (configured below or manually in rclone.conf) to use for uploads.
# This remote MUST be defined either via the RCLONE_REMOTE_<N> variables below OR manually in rclone_config/rclone.conf
# Leave blank to disable cloud upload for this backup run.
RCLONE_REMOTE_NAME=

# Path within the *active* rclone remote where backups should be stored (e.g., "resolve_backups/production")
# Leave blank if RCLONE_REMOTE_NAME is blank.
RCLONE_REMOTE_PATH=

# Number of days to keep local backups in the ./backups volume (default is 7 if not set)
BACKUP_RETENTION_DAYS=7

# --- Optional: Dynamic Rclone Remote Configuration ---
# The entrypoint script can dynamically configure rclone remotes based on these variables.
# Define remotes sequentially starting with N=1 (RCLONE_REMOTE_1_...).
# The entrypoint will stop looking when it doesn't find RCLONE_REMOTE_<N>_NAME.

# --- Example 1: Google Drive using Service Account ---
# RCLONE_REMOTE_1_NAME=my_google_drive_backup
# RCLONE_REMOTE_1_TYPE=drive
# # Paste the *entire content* of your Google Cloud Service Account JSON key file below.
# # Ensure it's enclosed in single quotes if it contains special characters, or handle quoting appropriately.
# RCLONE_REMOTE_1_PARAM_SERVICE_ACCOUNT_CREDENTIALS='{ "type": "service_account", ... }'
# # Optional: Specify a Team Drive ID if needed
# # RCLONE_REMOTE_1_PARAM_TEAM_DRIVE=YOUR_TEAM_DRIVE_ID

# --- Example 2: AWS S3 ---
# RCLONE_REMOTE_2_NAME=my_s3_backup
# RCLONE_REMOTE_2_TYPE=s3
# RCLONE_REMOTE_2_PARAM_PROVIDER=AWS # Or other S3-compatible provider
# RCLONE_REMOTE_2_PARAM_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID
# RCLONE_REMOTE_2_PARAM_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY
# RCLONE_REMOTE_2_PARAM_REGION=us-east-1 # Or your desired AWS region
# # Optional: Specify storage class, ACL, etc.
# # RCLONE_REMOTE_2_PARAM_STORAGE_CLASS=STANDARD_IA
# # RCLONE_REMOTE_2_PARAM_ACL=private

# --- Example 3: Backblaze B2 ---
# RCLONE_REMOTE_3_NAME=my_b2_backup
# RCLONE_REMOTE_3_TYPE=b2
# RCLONE_REMOTE_3_PARAM_ACCOUNT=YOUR_B2_ACCOUNT_ID_OR_APPLICATION_KEY_ID
# RCLONE_REMOTE_3_PARAM_KEY=YOUR_B2_APPLICATION_KEY
# # Optional: Specify endpoint if needed (e.g., for specific regions)
# # RCLONE_REMOTE_3_PARAM_ENDPOINT=s3.us-west-000.backblazeb2.com

# --- Example 4: Local Filesystem (useful for testing) ---
# RCLONE_REMOTE_4_NAME=local_test_backup
# RCLONE_REMOTE_4_TYPE=local
# # No parameters usually needed for 'local' type unless specifying nounc, case_sensitive etc.